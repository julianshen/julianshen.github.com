<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Social Network on Le murmure de Julian</title><link>https://blog.jln.co/tags/social-network/</link><description>Recent content in Social Network on Le murmure de Julian</description><generator>Hugo</generator><language>zh-tw</language><managingEditor>julianshen22@gmail.com (Julian Shen)</managingEditor><webMaster>julianshen22@gmail.com (Julian Shen)</webMaster><lastBuildDate>Wed, 02 Nov 2016 09:15:35 +0000</lastBuildDate><atom:link href="https://blog.jln.co/tags/social-network/feed.xml" rel="self" type="application/rss+xml"/><item><title>淺談Social Feed - 後端架構實作 [Server]</title><link>https://blog.jln.co/%E6%B7%BA%E8%AB%87Social-Feed-%E5%BE%8C%E7%AB%AF%E6%9E%B6%E6%A7%8B%E5%AF%A6%E4%BD%9C-Server/</link><pubDate>Wed, 02 Nov 2016 09:15:35 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/%E6%B7%BA%E8%AB%87Social-Feed-%E5%BE%8C%E7%AB%AF%E6%9E%B6%E6%A7%8B%E5%AF%A6%E4%BD%9C-Server/</guid><description>&lt;p&gt;這應該是這系列最後一篇了吧, 雖然回頭看, 可能有些漏寫, 不過, 以後想到再補吧, 如果還沒看過前兩篇, 可以再複習一下:
&lt;a href="https://blog.jln.co/%E6%B7%BA%E8%AB%87social-feed-%E6%A6%82%E5%BF%B5%E7%AF%87/"&gt;概念篇&lt;/a&gt;,&lt;a href="https://blog.jln.co/%E6%B7%BA%E8%AB%87social-feed-%E5%A4%9A%E6%9C%8D%E5%8B%99%E5%BD%99%E6%95%B4%E5%BC%8F%E7%9A%84social-feed-client/"&gt;多服務彙整&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;這篇主要要著眼在如何做Timeline這東西(怎又突然把它叫Timeline了? 好吧, 複習了一下很多文章, 發現這還是比較通用的名詞)&lt;/p&gt;</description></item><item><title>淺談Social Feed - 多服務彙整式的social feed [Client]</title><link>https://blog.jln.co/%E6%B7%BA%E8%AB%87Social-Feed-%E5%A4%9A%E6%9C%8D%E5%8B%99%E5%BD%99%E6%95%B4%E5%BC%8F%E7%9A%84social-feed-Client/</link><pubDate>Mon, 31 Oct 2016 08:49:18 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/%E6%B7%BA%E8%AB%87Social-Feed-%E5%A4%9A%E6%9C%8D%E5%8B%99%E5%BD%99%E6%95%B4%E5%BC%8F%E7%9A%84social-feed-Client/</guid><description>&lt;p&gt;出去放空玩一陣子了, 也該接下來整理一下剩下的東西了, 這篇主要要來談一下彙整式的social feed (aggregation feeds), 這功用是什麼呢?
由於現代人擁有了很多社群網路的帳號, 但如果要一個個網站或App開著看才能看到所有的動態, 未免太累了, 因此變有這種彙整式的服務出現, 讓使用者在一個地方可以看到所有的社群動態&lt;/p&gt;</description></item><item><title>淺談Social Feed - 概念篇</title><link>https://blog.jln.co/%E6%B7%BA%E8%AB%87Social-Feed-%E6%A6%82%E5%BF%B5%E7%AF%87/</link><pubDate>Fri, 21 Oct 2016 09:07:59 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/%E6%B7%BA%E8%AB%87Social-Feed-%E6%A6%82%E5%BF%B5%E7%AF%87/</guid><description>&lt;p&gt;如果要找出一個我過去幾年工作中比較具有代表性的東西, 想了一下, 應該就是social feed這東西了(寫這篇時, 想了一下該用啥名詞, 以往我會叫Timeline, 不過Social feed應該更為貼切一點),
趁現在才剛離職有些時間, 把這些東西整理一下, 主要還是以以前做過的東西的概念為主, 希望沒忘掉太多&lt;/p&gt;</description></item><item><title>[筆記] Building social networking service with DIASPORA* on Heroku</title><link>https://blog.jln.co/%E7%AD%86%E8%A8%98-Building-social-networking-service-with-DIASPORA-on-Heroku/</link><pubDate>Thu, 29 Sep 2011 01:11:11 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/%E7%AD%86%E8%A8%98-Building-social-networking-service-with-DIASPORA-on-Heroku/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;div class="p_embed p_image_embed"&gt; &lt;a href="http://posterous.com/getfile/files.posterous.com/temp-2011-09-28/yDcrGkHznnvkFfkhEjoabkEryHGaevvynvtyCEGosBbuinEijbvqtaehCjpq/_2011-09-29_12.03.19.png.scaled1000.png"&gt;&lt;img alt="_2011-09-29_12" height="392" src="http://posterous.com/getfile/files.posterous.com/temp-2011-09-28/yDcrGkHznnvkFfkhEjoabkEryHGaevvynvtyCEGosBbuinEijbvqtaehCjpq/_2011-09-29_12.03.19.png.scaled500.png" width="500"/&gt;&lt;/a&gt; &lt;/div&gt; &lt;p&gt;Looks familiar? It&amp;rsquo;s not Google+. It&amp;rsquo;s &lt;a href="https://joindiaspora.com/"&gt;DIASPORA&lt;/a&gt;. An open source project that implements a distributed social networking service. This project was announced on APRIL 24, 2010 (Just right after Facebook f8 2010 that is at APRIL 21). Alpha version was released at NOV 23, 2010 (two days before my birthday :P). &lt;/p&gt; &lt;p&gt;According to &lt;a href="http://mashable.com/2010/05/28/zuckerberg-diaspora/"&gt;this&lt;/a&gt;, Mark Zuckerbug also donated to it just because it&amp;rsquo;s a cool idea.&lt;/p&gt; &lt;p&gt;It&amp;rsquo;s built on Ruby on rails. So it might be not so difficult to port it to Heroku platform which is a nice RoR host (althrough it still took me some time). It might be easier than build from scratch on a Linux. &lt;/p&gt;</description></item><item><title>Social Network的 人、事、時、地、物</title><link>https://blog.jln.co/Social-Network%E7%9A%84-%E4%BA%BA%E4%BA%8B%E6%99%82%E5%9C%B0%E7%89%A9/</link><pubDate>Mon, 26 Sep 2011 23:18:09 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Social-Network%E7%9A%84-%E4%BA%BA%E4%BA%8B%E6%99%82%E5%9C%B0%E7%89%A9/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;我們的生活周遭不外乎就是以人、事、時、地、物 所構成, 人與人之間的互動, 事件的發生 等等&lt;/p&gt; &lt;p&gt;每個Social Network Service正是在想辦法把我們的生活的縮影給數位化, 網路化&lt;/p&gt; &lt;ol&gt;&lt;li&gt;人: Personal profile, Friends, Lists, Group&amp;hellip;.虛擬著人與人之間互動的關係&lt;/li&gt; &lt;li&gt;事: What&amp;rsquo;s on your mind? What&amp;rsquo;s happening? 什麼事情即將發生或發生過(events)&lt;/li&gt; &lt;li&gt;時: 每個事件, 動作都會帶著時間&lt;/li&gt; &lt;li&gt;地: Check in是沒意義的動作, 只是好玩, 但如果事件或想法帶著地點就不同了, 那代表事情的發生地點, 或是你在啥地方激發了你的想法&lt;/li&gt; &lt;li&gt;物: 吃食物, 看電影, 聽音樂, 讀一本書&amp;hellip;我們時時刻刻無不跟東西在互動&lt;/li&gt; &lt;/ol&gt;&lt;p&gt;Google+對Social network的解答是隱私權(Circle), 是分享(Reshare, auto upload), 是溝通(Hangout), 但Facebook卻是從人出發(Profile, Timeline, 最早由Profile), 到Open Graph (與物的互動), 想盡辦法縮影我們的生活, 雖然有很多爭議點, 我認為, 現階段G+還是無法抗衡, 比較起來, Facebook目前還是比Google懂社群 (純個人意見抒發)&lt;/p&gt;</description></item><item><title>[筆記] Translate open graph activity</title><link>https://blog.jln.co/%E7%AD%86%E8%A8%98-Translate-open-graph-activity/</link><pubDate>Mon, 26 Sep 2011 18:33:23 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/%E7%AD%86%E8%A8%98-Translate-open-graph-activity/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;ol&gt;&lt;li&gt;Go to Facebook developer :&lt;a href="https://developers.facebook.com/apps"&gt; &lt;/a&gt;&lt;a href="https://developers.facebook.com/apps"&gt;https://developers.facebook.com/apps&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Select your app&lt;/li&gt; &lt;li&gt;Click &amp;ldquo;Edit Setting&amp;rdquo;&lt;/li&gt; &lt;li&gt;Choose &amp;ldquo;Translate your app&amp;rdquo; at left hand side&lt;/li&gt; &lt;li&gt;You&amp;rsquo;ll see a form as following. Select your language and translate all messages:&lt;/li&gt; &lt;/ol&gt;&lt;div class="p_embed p_image_embed"&gt; &lt;a href="http://posterous.com/getfile/files.posterous.com/temp-2011-09-26/gJsBdvlFmemmIuykxJzqHGujoiAtmvvEHsiJBkqpDrthffAqDBHEEqGIFlwb/_2011-09-26_6.32.03.png.scaled1000.png"&gt;&lt;img alt="_2011-09-26_6" height="182" src="http://posterous.com/getfile/files.posterous.com/temp-2011-09-26/gJsBdvlFmemmIuykxJzqHGujoiAtmvvEHsiJBkqpDrthffAqDBHEEqGIFlwb/_2011-09-26_6.32.03.png.scaled500.png" width="500"/&gt;&lt;/a&gt; &lt;/div&gt; &lt;/div&gt;</description></item><item><title>[筆記][測試] Facebook Open graph + Heroku + node.js</title><link>https://blog.jln.co/%E7%AD%86%E8%A8%98%E6%B8%AC%E8%A9%A6-Facebook-Open-graph--Heroku--node.js/</link><pubDate>Mon, 26 Sep 2011 01:28:43 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/%E7%AD%86%E8%A8%98%E6%B8%AC%E8%A9%A6-Facebook-Open-graph--Heroku--node.js/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;Open graph的確是個好物, 雖然說早在去年的f8就已經推出了, 但現在更加完備了, 其實也等不及看會有啥應用推出了, 當然自己也想來玩看看,  本想照&lt;a href="https://developers.facebook.com/docs/beta/opengraph/tutorial/"&gt;Tutorial&lt;/a&gt;依樣畫葫蘆抄一個體驗看看, 又覺這樣太無聊, 又想說試看看heroku + node.js, 沒真的玩過node.js, 就拿這題目試試&lt;/p&gt;</description></item><item><title>在Heroku上建立一個以Node.js開發的Facebook應用程式</title><link>https://blog.jln.co/%E5%9C%A8Heroku%E4%B8%8A%E5%BB%BA%E7%AB%8B%E4%B8%80%E5%80%8B%E4%BB%A5Node.js%E9%96%8B%E7%99%BC%E7%9A%84Facebook%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F/</link><pubDate>Fri, 23 Sep 2011 05:27:32 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/%E5%9C%A8Heroku%E4%B8%8A%E5%BB%BA%E7%AB%8B%E4%B8%80%E5%80%8B%E4%BB%A5Node.js%E9%96%8B%E7%99%BC%E7%9A%84Facebook%E6%87%89%E7%94%A8%E7%A8%8B%E5%BC%8F/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;這篇算筆記, 有可能會有一些失落環節在, 主要從create Facebook application到可以在local端執行&lt;/p&gt; &lt;p&gt;Facebook這月稍早時跟Heroku合作, 讓建立一個Facebook應用程式(含後端)更加方便: &lt;a href="http://developers.facebook.com/blog/post/558/"&gt;http://developers.facebook.com/blog/post/558/&lt;/a&gt; (有些步驟可以從這看)&lt;/p&gt;</description></item><item><title>My first "Timeline"</title><link>https://blog.jln.co/My-first-Timeline/</link><pubDate>Fri, 23 Sep 2011 04:16:08 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/My-first-Timeline/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;div class="p_embed p_image_embed"&gt; &lt;a href="http://posterous.com/getfile/files.posterous.com/temp-2011-09-22/AGwIvvenAfkGwcsklmCigkBGiAcycaayfEzIACJtiAetgCmwzipdrcIEdJtH/_2011-09-23_4.06.05.png.scaled1000.png"&gt;&lt;img alt="_2011-09-23_4" height="424" src="http://posterous.com/getfile/files.posterous.com/temp-2011-09-22/AGwIvvenAfkGwcsklmCigkBGiAcycaayfEzIACJtiAetgCmwzipdrcIEdJtH/_2011-09-23_4.06.05.png.scaled500.png" width="500"/&gt;&lt;/a&gt; &lt;/div&gt; &lt;div class="p_embed p_image_embed"&gt; &lt;a href="http://posterous.com/getfile/files.posterous.com/temp-2011-09-22/mkIusBdAvvqedkEmhttscjhhgxEcAJGvmicbHxBgHHFlkgkzzynocdlFIuwa/_2011-09-23_4.09.31.png.scaled1000.png"&gt;&lt;img alt="_2011-09-23_4" height="410" src="http://posterous.com/getfile/files.posterous.com/temp-2011-09-22/mkIusBdAvvqedkEmhttscjhhgxEcAJGvmicbHxBgHHFlkgkzzynocdlFIuwa/_2011-09-23_4.09.31.png.scaled500.png" width="500"/&gt;&lt;/a&gt; &lt;/div&gt; &lt;p&gt;Facebook今天發表的Timeline真是令人興奮的功能呀&lt;/p&gt; &lt;p&gt;現在應該再也沒人說很難用Facebook當日記了(雖然我講日記這概念講很久都沒去實現他)&amp;hellip;&lt;/p&gt;</description></item><item><title>[筆記]一些FQLs</title><link>https://blog.jln.co/%E7%AD%86%E8%A8%98%E4%B8%80%E4%BA%9BFQLs/</link><pubDate>Thu, 05 May 2011 09:50:34 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/%E7%AD%86%E8%A8%98%E4%B8%80%E4%BA%9BFQLs/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;本來是放在我EverNotes內的, 貼一些出來好了, 無聊時玩玩的東西, 沒優化過:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;共同喜歡的Page : select name from page where page_id in (select page_id from page_fan where uid=&lt;strong&gt;friend_uid&lt;/strong&gt; and page_id in (select page_id from page_fan where uid=&lt;strong&gt;me()&lt;/strong&gt;))&lt;/li&gt; &lt;li&gt;共同朋友: select name from user where uid in (select uid2 from friend where uid1=me()) and uid in (select uid2 from friend where uid1=&lt;strong&gt;friend_uid&lt;/strong&gt;)&lt;/li&gt; &lt;li&gt;同時都出現的照片: select src from photo where pid in (select pid from photo_tag where subject=&lt;strong&gt;friend_uid&lt;/strong&gt;) and pid in (select pid from photo_tag where subject=me())&lt;/li&gt; &lt;li&gt;屬於某Group的照片: select src from photo where pid in (select pid from photo_tag where subject=&lt;strong&gt;group_id&lt;/strong&gt;)&lt;/li&gt; &lt;li&gt;共同參加的活動: select name from event where eid in (select eid from event_member where uid=me() and rsvp_status=&amp;lsquo;attending&amp;rsquo;) and eid in (select eid from event_member where uid=&lt;strong&gt;friend_id&lt;/strong&gt; and rsvp_status='attending&amp;rsquo;)&lt;/li&gt; &lt;li&gt;都去過的地方(僅限於自己checkin不包含被tag): select name from place where page_id in (select page_id from checkin where author_uid=me()) and page_id in (select page_id from checkin where author_uid=&lt;strong&gt;friend_uid&lt;/strong&gt;)&lt;/li&gt; &lt;li&gt;喜歡過的某人的post:  select message from stream where post_id in (select post_id from like where post_id in (SELECT post_id FROM stream WHERE source_id=&lt;strong&gt;friend_uid&lt;/strong&gt;) and user_id=me())&lt;/li&gt; &lt;li&gt;Comments on someone&amp;rsquo;s post: select text from comment where post_id in (SELECT post_id FROM stream WHERE source_id=&lt;strong&gt;friend_uid&lt;/strong&gt;) and fromid=me()&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;其中&amp;quot;me()&amp;ldquo;是自己, 有些FQL裡的&amp;quot;me()&amp;quot;可以代換成另一個人的uid&lt;/p&gt;</description></item><item><title>Recognize your friend with Face.com</title><link>https://blog.jln.co/Recognize-your-friend-with-Face.com/</link><pubDate>Sun, 01 May 2011 21:26:35 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Recognize-your-friend-with-Face.com/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;替照片上的每個人都加上標籤(tag)是一個蠻好用的功能, 這可以方便你找到有某人的照片, 或是一群人在某時的合照, 如果善加利用是相當好用的功能, 目前主流的幾個相片服務像是Flickr, Facebook, Picasa等等, 都有這樣的功能&lt;/p&gt;</description></item><item><title>The Truman show and Facebook</title><link>https://blog.jln.co/The-Truman-show-and-Facebook/</link><pubDate>Mon, 25 Apr 2011 00:40:27 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/The-Truman-show-and-Facebook/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;很久之前就有這篇的構思, 兩天前又想到, 又忘了寫下來了, 趁這時候記憶還新鮮時, 再來寫一次&lt;/p&gt; &lt;p&gt;Social network和隱私權的問題已經是被探討到爛了, 很多聽到大多是負面的, 我倒也不想從&amp;quot;好&amp;quot;或&amp;quot;壞&amp;quot;出發啦&amp;hellip;只是每次這個主題都讓我想到一部Jim Carrey的一部電影&amp;quot;The Truman&amp;quot; Show&lt;/p&gt;</description></item><item><title>[Facebook][筆記] 尋找user id和page id</title><link>https://blog.jln.co/Facebook%E7%AD%86%E8%A8%98-%E5%B0%8B%E6%89%BEuser-id%E5%92%8Cpage-id/</link><pubDate>Sat, 12 Mar 2011 20:52:36 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Facebook%E7%AD%86%E8%A8%98-%E5%B0%8B%E6%89%BEuser-id%E5%92%8Cpage-id/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;自從Facebook可以讓user指定name後, page和profile的url就變成這形式了:&lt;/p&gt; &lt;p&gt;&lt;a href="http://www.facebook.com/YoYoMa"&gt;http://www.facebook.com/YoYoMa&lt;/a&gt;&lt;/p&gt; &lt;p&gt;雖然說Graph API可以用name, 但對REST API和FQL就大多需要ID, 傷腦筋&lt;/p&gt; &lt;p&gt;還好, 這些還在html source裡面, 打開查:&lt;/p&gt;</description></item><item><title>社群問答網站 Quora</title><link>https://blog.jln.co/%E7%A4%BE%E7%BE%A4%E5%95%8F%E7%AD%94%E7%B6%B2%E7%AB%99-Quora/</link><pubDate>Wed, 29 Dec 2010 19:00:43 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/%E7%A4%BE%E7%BE%A4%E5%95%8F%E7%AD%94%E7%B6%B2%E7%AB%99-Quora/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;講到問答網站, 可能會想到的是Yahoo奇摩知識家, 如果是developer可能會想到StackOverflow&lt;/p&gt; &lt;p&gt;不過今年有另一個新型態的問答網站崛起, 就是以社群(Social network)為基礎的&lt;/p&gt;</description></item><item><title>Social networking with mobility</title><link>https://blog.jln.co/Social-networking-with-mobility/</link><pubDate>Wed, 08 Dec 2010 02:07:56 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Social-networking-with-mobility/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;本來想寫一篇這主題的, 後來想想, 跟自己工作太過接近, 寫了也不好, 所以這篇單純來推薦一篇好文:&lt;/p&gt; &lt;p&gt;&lt;a href="http://techcrunch.com/2010/12/05/social-networking-future/?utm_source=feedburner&amp;amp;utm_medium=feed&amp;amp;utm_campaign=Feed:+Techcrunch+(TechCrunch)"&gt;Social Networking: The Future&lt;/a&gt;&lt;/p&gt; &lt;p&gt;其中的&amp;quot;Social Graph will become portable&amp;quot;, 其實我想的稍微多了點, 不過還是先推薦這篇就好&lt;/p&gt;</description></item><item><title>BBS and Social Networking</title><link>https://blog.jln.co/BBS-and-Social-Networking/</link><pubDate>Sun, 05 Dec 2010 13:28:58 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/BBS-and-Social-Networking/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;早上看到&lt;a href="http://techcrunch.com/2010/12/03/social-networking-past/"&gt;這篇文章&lt;/a&gt;, 興起了寫這篇的念頭, 雖然說自己也應該大約十多年沒玩BBS了&lt;/p&gt; &lt;p&gt;現在在台灣所說的BBS跟早期流行的BBS其實是不同的, 早期流行的BBS是撥接式的, 還記得我在高中的時候, 因為看到國小同學在玩, 也去買了台modem玩起了撥接的BBS, 早期由於Internet尚未興起, 因此訊息的交換就是透過這種方式, 一般的使用者利用數據機撥接到BBS站台下載訊息回來, 然後利用像是藍波快信(Blue wave)這類的軟體離線閱讀和回覆, 然後下次撥接的時候在把內容上傳, 除了討論區外, 還可以分享檔案, 而BBS站台的主持人通常會申請的一到多線電話讓人撥接進來, 利用半夜的時間與其他站台交換信件跟資料, 以現在的觀點來看雖然是很落伍, 不過當時其實還蠻多人玩的不亦樂乎的&lt;/p&gt;</description></item></channel></rss>