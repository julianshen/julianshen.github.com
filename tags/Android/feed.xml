<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Android on Le murmure de Julian</title><link>https://blog.jln.co/tags/Android/</link><description>Recent content in Android on Le murmure de Julian</description><generator>Hugo</generator><language>zh-tw</language><managingEditor>julianshen22@gmail.com (Julian Shen)</managingEditor><webMaster>julianshen22@gmail.com (Julian Shen)</webMaster><lastBuildDate>Sun, 12 Mar 2017 12:07:35 +0000</lastBuildDate><atom:link href="https://blog.jln.co/tags/Android/feed.xml" rel="self" type="application/rss+xml"/><item><title>[Java] 關於retrofit的一些奇技</title><link>https://blog.jln.co/Java-%E9%97%9C%E6%96%BCretrofit%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A5%87%E6%8A%80/</link><pubDate>Sun, 12 Mar 2017 12:07:35 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Java-%E9%97%9C%E6%96%BCretrofit%E7%9A%84%E4%B8%80%E4%BA%9B%E5%A5%87%E6%8A%80/</guid><description>&lt;p&gt;&lt;a href="http://square.github.io/retrofit/"&gt;Retrofit&lt;/a&gt;一直是一套在開發REST client一個相當好用的工具, 不只可以應用在Android上, 而是在任何Java相關的, 不管是獨立的App, 或是Server端的開發, 都相當好用&lt;/p&gt;</description></item><item><title>[Android] Retrofit + Protobuf + Wire</title><link>https://blog.jln.co/Android-Retrofit--Protobuf--Wire/</link><pubDate>Thu, 29 Dec 2016 15:33:25 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-Retrofit--Protobuf--Wire/</guid><description>&lt;p&gt;&lt;a href="https://square.github.io/retrofit/"&gt;Retrofit&lt;/a&gt;目前已然成為最熱門的呼叫REST API的開源程式庫了,不過,
大部分的Retrofit多是用來處理Json類的REST API, 但Retrofit的能力卻不僅限於此&lt;/p&gt;
&lt;p&gt;透過Converter, Retrofit可以處理的不只是Json, 還包含了XML, &lt;a href="https://developers.google.com/protocol-buffers/"&gt;Protobuf&lt;/a&gt;, 甚至你自己的自訂格式, 剛好最近看Json不太順眼,
想來試試&lt;a href="https://developers.google.com/protocol-buffers/"&gt;Protobuf&lt;/a&gt;, 就來試試這部分&lt;/p&gt;</description></item><item><title>[Android] 把Github當Maven repository用</title><link>https://blog.jln.co/Android-%E6%8A%8AGithub%E7%95%B6Maven-repository%E7%94%A8/</link><pubDate>Tue, 27 Dec 2016 15:39:59 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E6%8A%8AGithub%E7%95%B6Maven-repository%E7%94%A8/</guid><description>&lt;p&gt;自從Android導入gradle之後, 使用開放的第三方的程式庫就越來越方便了, 雖然方便, 但也不免會碰到這類的問題:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;想要的功能在master branch上更新了, 但卻遲遲不release以至於想用新的功能無法用&lt;/li&gt;
&lt;li&gt;程式碼已經沒在維護了, maven repository上一直都還是有問題的舊版本, 明知道怎麼修卻無法代他release到maven repository上去, PR又遲遲沒人理&lt;/li&gt;
&lt;li&gt;想加上自己的私有功能, 又不想包整包source codes到app裡面去&lt;/li&gt;
&lt;li&gt;想要開放自己做的程式庫卻覺得release到maven很麻煩&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;還好有&lt;a href="https://jitpack.io/"&gt;Jitpack&lt;/a&gt;這東西, 剛剛就是碰到一個東西有問題, 想把它修掉直接用, 研究了一下&lt;/p&gt;</description></item><item><title>[Android] 在Android Studio取得certificate fingerprints</title><link>https://blog.jln.co/Android-%E5%9C%A8Android-Studio%E5%8F%96%E5%BE%97certificate-fingerprints/</link><pubDate>Sun, 11 Dec 2016 21:27:45 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E5%9C%A8Android-Studio%E5%8F%96%E5%BE%97certificate-fingerprints/</guid><description>&lt;p&gt;在使用很多API服務像是Google的API或是Facebook的API, 常常會需要拿簽署APK的Key的signature登錄,
取得這sigature的方法有很多種, 剛學到一種是直接可以從Android studio的Gardle選單內取得的, 方法如下:&lt;/p&gt;</description></item><item><title>[Android] Firebase + WebRTC on Android</title><link>https://blog.jln.co/Android-Firebase--WebRTC-on-Android/</link><pubDate>Tue, 29 Nov 2016 17:39:41 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-Firebase--WebRTC-on-Android/</guid><description>&lt;p&gt;&lt;a href="https://webrtc.org/"&gt;WebRTC&lt;/a&gt;是一個支援瀏覽器的即時影音對話的架構, 算是一個業界標(W3C,IETF), 最近由於想做一個有影音通話的應用, 就研究了一下這東西&lt;/p&gt;
&lt;p&gt;如果只是想嘗試一下&lt;a href="https://webrtc.org/"&gt;WebRTC&lt;/a&gt;, 是可以直接是可以直接試&lt;a href="https://appr.tc/"&gt;AppRTC&lt;/a&gt;這個Google的範例, 不過這個是Web的版本, 我想要做的是
手機的版本(Android, iOS), &lt;a href="https://appr.tc/"&gt;AppRTC&lt;/a&gt;其實也有Android的版本可搭配&lt;/p&gt;</description></item><item><title>[Android] 使用Retrofit如何避免Man in the middle攻擊</title><link>https://blog.jln.co/Android-%E4%BD%BF%E7%94%A8Retrofit%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8DMan-in-the-middle%E6%94%BB%E6%93%8A/</link><pubDate>Fri, 30 Sep 2016 21:47:36 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E4%BD%BF%E7%94%A8Retrofit%E5%A6%82%E4%BD%95%E9%81%BF%E5%85%8DMan-in-the-middle%E6%94%BB%E6%93%8A/</guid><description>&lt;p&gt;前幾天看到朋友寫如何用&lt;a href="https://www.charlesproxy.com"&gt;Charles Proxy&lt;/a&gt;來debug REST API,
突然就想到了這個問題, &lt;a href="https://www.charlesproxy.com"&gt;Charles Proxy&lt;/a&gt;是一個不錯的工具, 我自己也蠻常用的
, 除了可以用來debug HTTP以外, 其實HTTPS也可以(參照&lt;a href="https://www.charlesproxy.com/documentation/proxying/ssl-proxying/"&gt;SSL proxying&lt;/a&gt;)
, 只要在手機上安裝好它的SSL certificate即可&lt;/p&gt;</description></item><item><title>[Android] 土製Play store API</title><link>https://blog.jln.co/Android-%E5%9C%9F%E8%A3%BDPlay-store-API/</link><pubDate>Wed, 20 Aug 2014 00:24:16 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E5%9C%9F%E8%A3%BDPlay-store-API/</guid><description>&lt;p&gt;認真說的話, 這也算不上啥非官方API, 算是一個為了抓取Play store上資訊的一個小小工具: &lt;a href="https://github.com/julianshen/PlaystoreUtil"&gt;PlaystoreUtil&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;現在很多網路的服務, 大多有提供開放的REST API來供人寫原生的程式使用, 當然也有非常多並沒有, 像是Play store, 目前就沒開放的API可供存取, 剛好想要有個東西可以查詢某個app在play store上是屬於啥分類的, 所以就乾脆自己自製一個囉&amp;hellip;&lt;/p&gt;</description></item><item><title>[筆記] Android library project和manifestmerger.enabled</title><link>https://blog.jln.co/%E7%AD%86%E8%A8%98-Android-library-project%E5%92%8Cmanifestmerger.enabled/</link><pubDate>Sun, 20 Oct 2013 10:51:29 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/%E7%AD%86%E8%A8%98-Android-library-project%E5%92%8Cmanifestmerger.enabled/</guid><description>&lt;p&gt;Android library project是為了解決Android開發中在不同專案間分享原始碼以及資源檔(resource)而出現的, 傳統的jar並未考慮資源檔的問題, 因此便需要靠Android library project來解決&lt;/p&gt;</description></item><item><title>[Android] Retrofit + Signpost : 替Retrofit加上OAuth支援</title><link>https://blog.jln.co/Android-Retrofit--Signpost-%E6%9B%BFRetrofit%E5%8A%A0%E4%B8%8AOAuth%E6%94%AF%E6%8F%B4/</link><pubDate>Sat, 29 Jun 2013 08:31:32 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-Retrofit--Signpost-%E6%9B%BFRetrofit%E5%8A%A0%E4%B8%8AOAuth%E6%94%AF%E6%8F%B4/</guid><description>看到Square發表的這個Retrofit - &lt;a href="http://bit.ly/167v72a"&gt;http://bit.ly/167v72a&lt;/a&gt; 蠻有趣的, 它的目的似乎是試圖的想要去簡化開發REST client, 開發者不用寫太多的邏輯, 只要寫一個Interface跟利用annotation就可以完成一個簡單的REST client:&lt;br/&gt;&lt;br/&gt;&lt;pre class="prettyprint prettyprinted" style="background-color: whitesmoke; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 1px solid rgba(0, 0, 0, 0.14902); color: #666666; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 20px; margin-bottom: 20px; padding: 9.5px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;"&gt;&lt;span class="kwd"&gt;public&lt;/span&gt;&lt;span class="pln" style="color: black;"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;interface&lt;/span&gt;&lt;span class="pln" style="color: black;"&gt; &lt;/span&gt;&lt;span class="typ" style="color: #222222;"&gt;GitHubService&lt;/span&gt;&lt;span class="pln" style="color: black;"&gt; &lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;{&lt;/span&gt;&lt;span class="pln" style="color: black;"&gt;&lt;br/&gt;&lt;/span&gt;&lt;span class="lit"&gt;@GET&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;(&lt;/span&gt;&lt;span class="str" style="color: #32835b;"&gt;"/users/{user}/repos"&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;)&lt;/span&gt;&lt;span class="pln" style="color: black;"&gt;&lt;br/&gt;&lt;/span&gt;&lt;span class="typ" style="color: #222222;"&gt;List&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;&amp;lt;&lt;/span&gt;&lt;span class="typ" style="color: #222222;"&gt;Repo&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pln" style="color: black;"&gt; listRepos&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;(&lt;/span&gt;&lt;span class="lit"&gt;@Path&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;(&lt;/span&gt;&lt;span class="str" style="color: #32835b;"&gt;"user"&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;)&lt;/span&gt;&lt;span class="pln" style="color: black;"&gt; &lt;/span&gt;&lt;span class="typ" style="color: #222222;"&gt;String&lt;/span&gt;&lt;span class="pln" style="color: black;"&gt; user&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;);&lt;/span&gt;&lt;span class="pln" style="color: black;"&gt;&lt;br/&gt;&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;}&lt;/span&gt;&lt;/pre&gt;&lt;div&gt;&lt;span class="pun" style="color: #888888;"&gt;&lt;br/&gt;&lt;/span&gt;&lt;/div&gt;因為開發者只需要寫interface和annotation, 實質上並不用寫任何的code, 真正實作的部份他用了Proxy class的技巧包裝起來了, 這作法讓我想起來很久之前我在之前的工作幫公司寫的一個legacy系統的wrapper, 那時有很多機器產生的interface, 如果人工一個個實作很浪費時間, Proxy class可以解決掉這一部分的問題, 同樣的在retrofit似乎也是想用這技巧節省實作&lt;br/&gt;&lt;br/&gt;但可惜的是, 現在的retrofit並還沒加入OAuth的支援, 因此送出去的API部分並沒被oauth簽章過,不過所幸要解決這一部分也不難, 寫一個Client class搭配&lt;a href="http://bit.ly/11OBeF8" target="_blank"&gt;Signpost&lt;/a&gt;還是可以做到, 這邊範例繼承了OkClient(使用OkHttp) :&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;&lt;script src="http://bit.ly/14BPkrJ"&gt;&lt;/script&gt;&lt;br/&gt;因為OkHttp也是一種HttpURLConnection, 因此Signpost搭配DefaultOAuthProvider和DefaultOAuthConsumer即可, 另外初始化RestAdapter時加上這個新的Client即可:&lt;br/&gt;&lt;br/&gt;&lt;blockquote class="tr_bq"&gt;RestAdapter restAdapter = new RestAdapter.Builder() .setClient(new SignedOkClient(mConsumer)) &lt;/blockquote&gt;&lt;br/&gt;&lt;br/&gt;
via Blogger &lt;a href="http://bit.ly/11OBeFb"&gt;http://bit.ly/11OBeFb&lt;/a&gt;</description></item><item><title>[Android] 自定義View屬性</title><link>https://blog.jln.co/Android-%E8%87%AA%E5%AE%9A%E7%BE%A9View%E5%B1%AC%E6%80%A7/</link><pubDate>Thu, 27 Jun 2013 01:46:42 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E8%87%AA%E5%AE%9A%E7%BE%A9View%E5%B1%AC%E6%80%A7/</guid><description>&lt;p&gt;在&lt;a href="http://bit.ly/14xA3IP" target="_blank"&gt;前一篇寫了一個自訂義的layout - SimpleCellLayout&lt;/a&gt;, 前一個版本的問題就是, 必須是寫程式把child view加進這個layout之中, 而且針對像是欄與行的數目也必須在程式裡設定, 並無法寫到layout xml中, 所以這次的目邊就是要讓這個layout可以像下面這樣用layout xml來擺佈:&lt;br/&gt;&lt;br/&gt;&lt;script src="http://bit.ly/1af6Kkh"&gt;&lt;/script&gt;&lt;br/&gt;在這範例之中, 用到幾個像是col, row, gapsize, cellX這些在原生Android並不存在的屬性, 為了這些屬性, 就需要定義一個attrs.xml在res/values目錄內, attrs.xml 裡面要定義的就是這些樣式描述屬性, 這邊定義了: 給SimpleCellLayout本身用的col(欄數), row(行數), gapsize(間距大小), 以及給他的Child views用的cellX(格子的橫軸位置), cellY(格子的縱軸位置), colspan(格子寬), rowspan(格子高), 除了gapsize我們需要的跟實際螢幕上的大小有關, 所以格式定義為dimension外(就是可以用3dp, 1px這類的值), 其他都是整數就可&lt;br/&gt;&lt;br/&gt;&lt;script src="http://bit.ly/14xA5Ap"&gt;&lt;/script&gt; 這些屬性, 到時候就是要放在xml標籤內的屬性 &lt;br/&gt;&lt;br/&gt;要用到這些屬性, 需要先在tag裡面定義一個新的name space, 如同在前面範例寫的:&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;</description></item><item><title>[Android] 一個簡單的自製 layout - SimpleCellLayout</title><link>https://blog.jln.co/Android-%E4%B8%80%E5%80%8B%E7%B0%A1%E5%96%AE%E7%9A%84%E8%87%AA%E8%A3%BD-layout-SimpleCellLayout/</link><pubDate>Wed, 26 Jun 2013 01:31:50 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E4%B8%80%E5%80%8B%E7%B0%A1%E5%96%AE%E7%9A%84%E8%87%AA%E8%A3%BD-layout-SimpleCellLayout/</guid><description>&lt;p&gt;寫Android寫了這麼久, 才想到自己沒寫過custom layout, 剛剛花了點時間(主要時間還是花在跟Android studio和gradle搏鬥)寫了一個簡單的CellLayout (還很陽春) :&lt;br/&gt;&lt;br/&gt;&lt;a href="http://bit.ly/12nuhGn"&gt;http://bit.ly/12nuhGn&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;寫custom layout還蠻簡單的, 在onMeasure決定自己和child views的大小, 在onLayout時把每個child views放到適當的位置, 目前還沒加入attibrtues的支援, 所以暫時還只能寫code自己把view加進去, 另外也還沒加檢查是不是會有重疊的views, 之後再來寫&lt;br/&gt;&lt;br/&gt;這個layout跟GridView不同, 可以不用每個格子都是同一大小, 以下範例是把畫面劃成4x4的格子, 左上角的那張圖大小是2x2, 下方則是 4x2&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;</description></item><item><title>[Android] 圓形大頭貼 - 使用Picasso的Transformation</title><link>https://blog.jln.co/Android-%E5%9C%93%E5%BD%A2%E5%A4%A7%E9%A0%AD%E8%B2%BC-%E4%BD%BF%E7%94%A8Picasso%E7%9A%84Transformation/</link><pubDate>Sat, 22 Jun 2013 01:31:57 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E5%9C%93%E5%BD%A2%E5%A4%A7%E9%A0%AD%E8%B2%BC-%E4%BD%BF%E7%94%A8Picasso%E7%9A%84Transformation/</guid><description>現在不管是Google+也好, 或是Facebook (Home), 似乎都很喜歡用圓形的大頭貼像這樣 (左上角圖形, &lt;br/&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://bit.ly/10Ea6Kt" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="400" src="http://bit.ly/11DoFZH" width="225"/&gt;&lt;/a&gt;&lt;/div&gt;&lt;br/&gt;但在server端存的大頭照其實都是都是方形的, 所以必須抓下來後再轉畫成圓的, 最近從網路抓圖的部分, 我還蠻喜歡用&lt;a href="http://bit.ly/10Ea9FT" target="_blank"&gt;Picasso&lt;/a&gt;的&lt;br/&gt;&lt;br/&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://bit.ly/11DoFZJ" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="191" src="http://bit.ly/11DoFZJ" width="400"/&gt;&lt;/a&gt;&lt;/div&gt;沒啥別的原因, 就是它簡單, 雖然說, 它似乎還是有一些小小問題, 不過它可以用這樣短短一行解決圖檔下載並顯示到ImageView的一連串動作:&lt;br/&gt;&lt;br/&gt;&lt;pre class="prettyprint prettyprinted" style="background-color: whitesmoke; border-bottom-left-radius: 4px; border-bottom-right-radius: 4px; border-top-left-radius: 4px; border-top-right-radius: 4px; border: 1px solid rgba(0, 0, 0, 0.14902); color: #666666; font-family: Monaco, Menlo, Consolas, 'Courier New', monospace; font-size: 13px; line-height: 20px; margin-bottom: 20px; padding: 9.5px; white-space: pre-wrap; word-break: break-all; word-wrap: break-word;"&gt;&lt;span style="background-color: #eeeeee;"&gt;&lt;span class="typ" style="color: #222222;"&gt;Picasso&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;.&lt;/span&gt;&lt;span class="kwd"&gt;with&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;(&lt;/span&gt;&lt;span class="pln" style="color: black;"&gt;context&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;).&lt;/span&gt;&lt;span class="pln" style="color: black;"&gt;load&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;(&lt;/span&gt;&lt;span class="str" style="color: #953a39;"&gt;"http://bit.ly/11DoFZL"&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;).&lt;/span&gt;&lt;span class="kwd"&gt;into&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;(&lt;/span&gt;&lt;span class="pln" style="color: black;"&gt;imageView&lt;/span&gt;&lt;span class="pun" style="color: #888888;"&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;div&gt;&lt;br/&gt;不過, 簡單的代價可能在其他的地方來說彈性就不高了, 不過, 做這樣一個小玩意兒的彈性倒是還有, 在Picasso中, 可以實作Transformation把下載下來的圖檔再作一次後處理, 在它的網頁有一個CropSquareTransformation的範例, 圓形的大頭貼可以視為這一個的延伸:&lt;/div&gt;&lt;div&gt;&lt;br/&gt;&lt;/div&gt;&lt;div&gt;&lt;script src="http://bit.ly/10Ea996"&gt;&lt;/script&gt;&lt;/div&gt;&lt;div&gt;這邊利用了BitmapShader重畫了一張圓形的大頭貼, 出來的結果就會像是這樣:&lt;br/&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://bit.ly/11DoFZP" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="400" src="http://bit.ly/10Ea998" width="225"/&gt;&lt;/a&gt;&lt;/div&gt;&lt;br/&gt;&lt;/div&gt;&lt;div&gt;&lt;br/&gt;&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;
via Blogger &lt;a href="http://bit.ly/11DoEVG"&gt;http://bit.ly/11DoEVG&lt;/a&gt;</description></item><item><title>[Android] 一閃一閃亮晶晶的BlinkLayout</title><link>https://blog.jln.co/Android-%E4%B8%80%E9%96%83%E4%B8%80%E9%96%83%E4%BA%AE%E6%99%B6%E6%99%B6%E7%9A%84BlinkLayout/</link><pubDate>Thu, 20 Jun 2013 20:16:26 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E4%B8%80%E9%96%83%E4%B8%80%E9%96%83%E4%BA%AE%E6%99%B6%E6%99%B6%E7%9A%84BlinkLayout/</guid><description>&lt;p&gt;在&lt;a href="https://developers.google.com/events/io/sessions/324958375" target="_blank"&gt;Androids Do Daydream&lt;/a&gt;裡有提到Romain Guy要他提(大概假的吧)在layout裡面放&amp;quot;&amp;lt;blink&amp;gt;&amp;ldquo;可以做到view閃爍的效果而不用寫到一行code&lt;br/&gt;&lt;br/&gt;查了一下AOSP的原始碼也的確有這東西, 它是一個躲在&lt;a href="https://github.com/android/platform_frameworks_base/blob/5cb0f2184656642160e9ac032d0646f766058a5b/core/java/android/view/LayoutInflater.java" target="_blank"&gt;LayoutInflater&lt;/a&gt;的一個叫BlinkLayout的東西, 這樣一來就可以配合&lt;a href="http://developer.android.com/reference/android/widget/TextClock.html" target="_blank"&gt;TextClock&lt;/a&gt; (API Level 17)來做一個閃爍的時鐘了&lt;br/&gt;&lt;br/&gt;&lt;script src="https://gist.github.com/julianshen/5822197.js"&gt;&lt;/script&gt;&lt;br/&gt;不過, 這樣, 是整個TextClock在閃, 而不是像一般數字鐘一樣是只有&amp;rdquo;:&amp;ldquo;閃, 如果要做到只有&amp;rdquo;:&amp;ldquo;在閃, 那只好把&amp;quot;時&amp;quot;跟&amp;quot;分&amp;quot;給拆開, 像這樣: &lt;br/&gt;&lt;br/&gt;&lt;script src="https://gist.github.com/julianshen/5822234.js"&gt;&lt;/script&gt;&lt;br/&gt;&lt;br/&gt;
via Blogger &lt;a href="http://julianshen.blogspot.com/2013/06/android-blinklayout.html"&gt;http://julianshen.blogspot.com/2013/06/android-blinklayout.html&lt;/a&gt;&lt;/p&gt;</description></item><item><title>[筆記][Android Studio]Git push</title><link>https://blog.jln.co/%E7%AD%86%E8%A8%98Android-StudioGit-push/</link><pubDate>Mon, 17 Jun 2013 09:46:39 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/%E7%AD%86%E8%A8%98Android-StudioGit-push/</guid><description>&lt;p&gt;本想說有直接整合了Git, GitHub是件不錯的事, 沒想到要把新project push到remote git就栽了&amp;hellip;.&lt;br/&gt;&lt;br/&gt;Android Studio/Intellij 似乎沒介面設定remote (搜尋了半天沒發現這種答案, 啃了半天的使用手冊也沒發現), 現在如果要把既有的project給匯出到遠端的git (如bitbucket), 就得利用command line (以bitbucket 為例):&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;</description></item><item><title>[筆記] Android Studio, Gradle &amp; Native libraries</title><link>https://blog.jln.co/%E7%AD%86%E8%A8%98-Android-Studio-Gradle-Native-libraries/</link><pubDate>Sun, 16 Jun 2013 00:01:29 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/%E7%AD%86%E8%A8%98-Android-Studio-Gradle-Native-libraries/</guid><description>&lt;p&gt;最近試用Android studio開發, 可能有些習慣被以往Eclipse慣壞了, 剛剛發現放在libs/底下的東西不像以前會被自動建置到apk內, 有點小訝異, 對jar file來說, 可能還好不算太難, 在build.gradle的dependencies內補上一筆就夠了, 但對native library (jni)那些.so檔, 就沒辦法&lt;br/&gt;&lt;br/&gt;用這樣解決了 Google了一下, 並且在Stack overflow上找到些解法來試, 可能因為Android studio跟Gradle Android plugin還一直在變化中, 在現在這版一直沒成功, 後來小改一下成底下這樣就成功了: &lt;br/&gt;&lt;script src="http://bit.ly/11PxIJZ"&gt;&lt;/script&gt;&lt;br/&gt;&lt;br/&gt;原本找到的解法是pkgTask.jniDir &lt;b&gt;&lt;span style="color: red;"&gt;new File&lt;/span&gt;&lt;/b&gt;(&amp;lsquo;build/native-libs&amp;rsquo;) , 這樣會得到&lt;br/&gt;&lt;/p&gt;</description></item><item><title>[Android] 列印到Android裝置</title><link>https://blog.jln.co/Android-%E5%88%97%E5%8D%B0%E5%88%B0Android%E8%A3%9D%E7%BD%AE/</link><pubDate>Tue, 02 Apr 2013 17:01:25 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E5%88%97%E5%8D%B0%E5%88%B0Android%E8%A3%9D%E7%BD%AE/</guid><description>&lt;p&gt;剛剛從Chrome要列印一份文件時, 發現一件有趣的事, 在選擇印表機時, 發現我的手機也在清單當中&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://bit.ly/17auoeu" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="156" src="http://bit.ly/Z5v1i8" width="320"/&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br/&gt;&lt;/div&gt;這怎一回事? 難道可以從電腦&amp;quot;列印&amp;quot;文件到手機?&lt;br/&gt;&lt;br/&gt;測了一下果然是如此, 在我的手機上會多了一份pdf, 內容就是由我的電腦列印過去的, 而且是透過Google Cloud Print, 打開Cloud Print的設定, 可以看到Print Jobs的確有我剛列印過去的&lt;br/&gt;&lt;br/&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://bit.ly/17auoeA" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="110" src="http://bit.ly/Z5v1ia" width="320"/&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br/&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;這功能需要有登入Cloud Print, 並且手機也要安裝Chrome才可以&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;a href="http://bit.ly/17auoeC"&gt;http://bit.ly/17auoeC&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://bit.ly/17aurqL" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="89" src="http://bit.ly/Z5v1ic" width="320"/&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br/&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;不知道實不實用, 還蠻有趣的就是了&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br/&gt;&lt;/div&gt;&lt;br/&gt;&lt;br/&gt;&lt;br/&gt;
via Blogger &lt;a href="http://bit.ly/17aurqN"&gt;http://bit.ly/17aurqN&lt;/a&gt;</description></item><item><title>[Android dev] JsonReader</title><link>https://blog.jln.co/Android-dev-JsonReader/</link><pubDate>Tue, 02 Apr 2013 02:02:33 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-dev-JsonReader/</guid><description>原本在Android下解析JSON內容,  大多用&lt;a href="http://bit.ly/14AliYI" target="_blank"&gt;JSONObject&lt;/a&gt;和&lt;a href="http://bit.ly/16rSIaD" target="_blank"&gt;JSONArray&lt;/a&gt;, 這兩個是很簡單的JSON parser, 只要將字串(String)傳入即可&lt;br/&gt;&lt;br/&gt;不過, 這跟在用DOM解析XML是有類似的問題, 解析文件是一氣呵成, 必須要把所有內容先走過一遍, 也需要更多的記憶體來儲存, 這對於解析較大的文件是一個大問題, 必須要花費更多時間和空間, 而且如果所需要的資料就算只是整份文件中間的一小部分, 還是得先把整份文件走完, 在XML, 可以用SAX來解決這問題, 但Android要到API level 11(Honeycomb) 才新增了&lt;a href="http://bit.ly/14AljMq" target="_blank"&gt;JsonReader&lt;/a&gt;這個算是JSON界的SAX的解決方案&lt;br/&gt;&lt;br/&gt; &lt;a href="http://bit.ly/14AljMq" target="_blank"&gt;JsonReader&lt;/a&gt;類似SAX, 也是一種streaming parser, 並不用一次讀出所有字串內容, 它要的只是個Reader, 但不太像SAX屬於事件驅動(event driven)的方式, 它應該比較像token consuming, 它定義了幾類基本的&lt;a href="http://bit.ly/14AljMr" target="_blank"&gt;JsonToken&lt;/a&gt;,  它也有BEGIN(END)_OBJECT, BEGIN(END)_ARRAY這種類似SAX中startElement, endElement, 但卻沒類似SAX的startDocument&lt;br/&gt;&lt;br/&gt;解析一個JSON物件的程式碼如下:&lt;br/&gt;&lt;br/&gt;&lt;blockquote class="tr_bq"&gt;&lt;pre&gt;&lt;b&gt; &lt;span style="color: #990000;"&gt; {username:"Bob", age: 14, sex: "m"}&lt;/span&gt;&lt;/b&gt;&lt;span style="color: #990000;"&gt; &lt;/span&gt;&lt;/pre&gt;&lt;/blockquote&gt;&lt;blockquote class="tr_bq"&gt;&lt;pre&gt;&lt;b&gt; reader.beginObject();&lt;/b&gt;&lt;br/&gt; while (reader.hasNext()) {&lt;br/&gt; String name = &lt;b&gt;reader.nextName();&lt;/b&gt;&lt;br/&gt; if (name.equals("username")) {&lt;br/&gt; username = reader.nextString();&lt;br/&gt; } else if (name.equals("age")) {&lt;br/&gt; followersCount = reader.nextInt();&lt;br/&gt; } &lt;span style="color: #990000;"&gt;else {&lt;br/&gt; reader.skipValue();&lt;br/&gt; }&lt;/span&gt;&lt;br/&gt; }&lt;br/&gt;&lt;b&gt;reader.endObject();&lt;/b&gt;&lt;/pre&gt;&lt;/blockquote&gt;解析一個物件, 要從beginObject開始(陣列則是beginArray), endObject結束, 接著透過一個while loop一個個走過這物件內所有的token, 說實在的, 不是很好debug,  你必須要先知道下一個要處理的token是啥類別, 以上面的例子為例, 物件內第一個token是&amp;quot;username&amp;quot;, 這是一個JsonToken.NAME, 因此要用nextName來處理, 搞錯了就會出錯, 還不容易知道錯哪,  而上面那例子裡的&amp;quot;else&amp;quot;也是必須的, 拿掉的話, 在endObject就會出錯, 因為這段程式並沒去處理&amp;quot;sex&amp;quot;, 因此處理完sex這個名字後, 並未消化掉&amp;quot;m&amp;quot;這個值(JsonToken.STRING), 而是直接endObject, 這會產生一個IllegalStateException&lt;br/&gt;&lt;br/&gt;為了避免用了錯誤的方式處理下一個token, 可以先用&lt;a href="http://bit.ly/16rSFLX" target="_blank"&gt;peek()&lt;/a&gt;來看一下下一個要處理的種類&lt;br/&gt;&lt;br/&gt;在可讀性上, 用JsonReader寫出的並不是很好, 但它卻適合來處理大的JSON文件, 或是像Twitter Streaming API這種幾乎無止盡的&lt;br/&gt;&lt;br/&gt;這當然也不是只有在Android上有, Google也早把這也&lt;a href="http://bit.ly/14AljMt" target="_blank"&gt;包含到GSON去了&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;
via Blogger &lt;a href="http://bit.ly/16rSFLZ"&gt;http://bit.ly/16rSFLZ&lt;/a&gt;</description></item><item><title>[ADK] 連接ADK2012到MacOS Lion</title><link>https://blog.jln.co/ADK-%E9%80%A3%E6%8E%A5ADK2012%E5%88%B0MacOS-Lion/</link><pubDate>Fri, 20 Jul 2012 00:14:34 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/ADK-%E9%80%A3%E6%8E%A5ADK2012%E5%88%B0MacOS-Lion/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;我家裡的電腦是Mac mini, OS是Mac OS Lion, 如果照著&lt;a href="http://developer.android.com/tools/adk/adk2.html#dev"&gt;ADK2012的開發文件&lt;/a&gt;想要去設定環境來開發, 一開始就會碰壁了&lt;/p&gt; &lt;p&gt;在文件中寫著, 你可以從&amp;quot;repo init -u &lt;a href="https://android.googlesource.com/accessories/manifest"&gt;https://android.googlesource.com/accessories/manifest&lt;/a&gt;&amp;ldquo;下載原始碼, 或是下載&lt;a href="https://dl-ssl.google.com/android/adk/adk2012_ide-macosx-20120626.zip"&gt;Mac版的ADK 2012 IDE&lt;/a&gt; (應該是由Arduino IDE改的)來開始開發&lt;/p&gt;</description></item><item><title>[Android] ADK 2012 偽開箱</title><link>https://blog.jln.co/Android-ADK-2012-%E5%81%BD%E9%96%8B%E7%AE%B1/</link><pubDate>Thu, 19 Jul 2012 17:12:37 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-ADK-2012-%E5%81%BD%E9%96%8B%E7%AE%B1/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;昨天去了GTUG聽了關於Arduino的分享, 硬體我是大外行, 但這東西還真的是很有趣呀! 其實在Google I/O拿到了免費的ADK 2012, 目前也還沒想到除了高級鬧鐘外, 我要拿它來玩啥, 先來個開箱好了&amp;hellip;呃&amp;hellip;但其實我老早就把箱子給破了&amp;hellip;.好吧, 這是個偽開箱&lt;/p&gt;</description></item><item><title>[Android] Enable/Disable Activity at runtime</title><link>https://blog.jln.co/Android-Enable/Disable-Activity-at-runtime/</link><pubDate>Wed, 18 Jul 2012 01:05:39 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-Enable/Disable-Activity-at-runtime/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;這篇主要來自Google I/O 2012這兩個Sessions:&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.google.com/events/io/sessions/gooio2012/101/"&gt;Making Good Apps Great: More Advanced Topics for Expert Android Developers&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="https://developers.google.com/events/io/sessions/gooio2012/103/"&gt;Doing More With Less: Being a Good Android Citizen&lt;/a&gt;&lt;/p&gt; &lt;p&gt;在這兩堂演講中有提到, 可以利用&amp;quot;&lt;a href="http://developer.android.com/reference/android/content/pm/PackageManager.html#setComponentEnabledSetting%28android.content.ComponentName,%20int,%20int%29"&gt;PackageManager.setComponentEnabledSetting&lt;/a&gt;&amp;ldquo;把不用的Intent receiver給停用, 這在Android中的確相當有用處, 常常Intent broadcast都是一個造成系統忙碌的主要原因, 在早期的Android版本, 甚至常常碰到因&amp;quot;android.net.conn.CONNECTIVITY_CHANGE&amp;quot;所導致的ANR, 這是因為註冊聽這Intent的receiver常常非常的多(大多網路相關, 而智慧型手機最常見就是網路相關的軟體)&lt;/p&gt;</description></item><item><title>Google IO 2012</title><link>https://blog.jln.co/Google-IO-2012/</link><pubDate>Mon, 09 Jul 2012 03:29:29 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Google-IO-2012/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;尼克大說，對Julian的十大IO問題之一應該是&amp;quot;你是自己花錢去的嗎?&amp;ldquo;, 今年的確自費出國參加了幾個活動, 本以為今年也無緣IO了, 不過最終還是成行了, 不用繼續怨念, 這都得感謝很多人呀…首先是Tiffanie的幫忙牽線, 以及Elvis的慷慨讓票(老實說他大可以拿去賣黃牛票賺一筆,卻原價轉賣給我), 還有wuman, 不曉得幫我跟他朋友煩過幾次, 後來聽到尼克大也差點幫我弄到票, 實在非常的感動&amp;hellip;.還得感謝Arthur, 我這次就可以不用自費出去了(還得間接感謝這時候離職的Johnny :P , 還有也有幫我問的mifong), 反正終於不用在台灣枯坐在電腦前熬夜看轉播, 雖然去了美國還是熬著夜被公司這邊要東西(不是有人拿著保障名額出去的?), 好吧&amp;hellip;.總歸還是很高興&amp;hellip;.很感謝這麼多的人&amp;hellip;.&lt;/p&gt;</description></item><item><title>[Android][筆記] JavaScript injection in ICS</title><link>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-JavaScript-injection-in-ICS/</link><pubDate>Fri, 17 Feb 2012 22:52:56 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-JavaScript-injection-in-ICS/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;看來script injection也不算是啥旁門左道了, 在Android 4.0 ICS上的WebView也使用了同樣的技巧了(在Gingerbread上並未看到這樣的codes)&lt;/p&gt;</description></item><item><title>[Android] javascript injection in WebView</title><link>https://blog.jln.co/Android-javascript-injection-in-WebView/</link><pubDate>Sat, 22 Oct 2011 03:12:19 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-javascript-injection-in-WebView/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;上次寫了一篇&amp;quot;&lt;a href="http://julianshen.posterous.com/startactivityforresult-and-callback-in-webvie"&gt;startActivityForResult and callback in WebView&lt;/a&gt;&amp;ldquo;, 本篇則是上次這篇的延伸應用, 這是有人問我如何inject一整個javascript file到一個web page內(剛剛回顧了一下自己這篇, 發現我把它叫做javascript injection)&lt;/p&gt;</description></item><item><title>[Android] If you can't remove it, at least you can still "disable" it</title><link>https://blog.jln.co/Android-If-you-cant-remove-it-at-least-you-can-still-disable-it/</link><pubDate>Sat, 22 Oct 2011 01:05:38 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-If-you-cant-remove-it-at-least-you-can-still-disable-it/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;Android 4.0 Ice Cream Sandwich 有一個新功能是, 使用者可以停用(Disable)系統上預載的應用程式, 以往系統預載的應用程式是不能被刪除的, 現在, 新的版本多了一個按鈕讓你可以停用它:&lt;/p&gt;</description></item><item><title>startActivityForResult and callback in WebView</title><link>https://blog.jln.co/startActivityForResult-and-callback-in-WebView/</link><pubDate>Sat, 16 Jul 2011 22:43:14 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/startActivityForResult-and-callback-in-WebView/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;想半天標題不知道怎下, 有點不是很貼切, 內容也寫的有點懶 :P 有可能會看不懂吧&lt;/p&gt; &lt;p&gt;最近開始想要一個禮拜想一個東西來實踐一下(不知道可以持續多久:P), 這禮拜想到的是這個: 從WebView內的javascript去叫起一個Activity, 然後把這Activity回傳的結果回傳給WebView內的javascript&lt;/p&gt;</description></item><item><title>[Android] 簡單範例: NFC Push</title><link>https://blog.jln.co/Android-%E7%B0%A1%E5%96%AE%E7%AF%84%E4%BE%8B-NFC-Push/</link><pubDate>Sun, 10 Jul 2011 19:50:31 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E7%B0%A1%E5%96%AE%E7%AF%84%E4%BE%8B-NFC-Push/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;div class="p_embed p_image_embed"&gt; &lt;img alt="Nfc" height="245" src="http://posterous.com/getfile/files.posterous.com/temp-2011-07-10/BpmjJvxpDnJbrChvpkHltlorqJuosFsichkeqrAnwDIGprkzDcnitelkklyc/nfc.png.scaled500.png" width="306"/&gt;&lt;/div&gt; &lt;p&gt;想不出啥好idea來利用NFC, 所以呢, 身體力行勝於一切, 寫隻小範例體驗一下比較真切, 所幸Android NFC API並不難, 從研究API到寫出這個範例, 比我畫上面那張圖花的時間還更短&amp;hellip;.&lt;/p&gt;</description></item><item><title>[Android] 隨便介紹: 小米(MIUI) ROM</title><link>https://blog.jln.co/Android-%E9%9A%A8%E4%BE%BF%E4%BB%8B%E7%B4%B9-%E5%B0%8F%E7%B1%B3MIUI-ROM/</link><pubDate>Sun, 10 Jul 2011 01:58:28 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E9%9A%A8%E4%BE%BF%E4%BB%8B%E7%B4%B9-%E5%B0%8F%E7%B1%B3MIUI-ROM/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;好像好久沒寫Android的技術性的文章了, 不過最近也沒提起啥勁implement些啥東西, 所以, 拿點簡單的介紹來充數&lt;/p&gt; &lt;p&gt;MIUI (&lt;a href="http://www.miui.com/)"&gt;http://www.miui.com/)&lt;/a&gt; 是對岸一個很有名的Android custom ROM, 也很強大, 有蠻多很酷的特色, 支援市面上十數種Android手機, 我的Nexus One上用的ROM一直是用它&lt;/p&gt;</description></item><item><title>[Android] WebView + jQuery Mobile + Data provider (contact provider)</title><link>https://blog.jln.co/Android-WebView--jQuery-Mobile--Data-provider-contact-provider/</link><pubDate>Wed, 22 Jun 2011 23:17:35 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-WebView--jQuery-Mobile--Data-provider-contact-provider/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;今天才又忽然想起以前寫過這玩具, 這個在&lt;a href="http://julianshen.posterous.com/introduction-to-mobile-application-developmen"&gt;之前演講&lt;/a&gt;時, 有拿出來小Demo過, 不過只是當時隨便玩玩的, 就又沈寂, 也忘了分享source出來了, 這個範例很簡單, 只是寫了一個Java interface去給WebView裡的javascript呼叫, 並用JQuery mobile做出list view&lt;/p&gt;</description></item><item><title>[idea][Android] File auto backup with Dropbox</title><link>https://blog.jln.co/ideaAndroid-File-auto-backup-with-Dropbox/</link><pubDate>Sat, 11 Jun 2011 10:32:55 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/ideaAndroid-File-auto-backup-with-Dropbox/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;iCould其實感覺好像還不錯, 雖然說Google有Google的Backup manager, 但像是自動拍照就自動備份到自己的stream這東西, 就沒有了&lt;/p&gt; &lt;p&gt;以雲端儲存來說, DropBox算是相當不錯了, 所以其實也可以利用它呀, 想到兩種方式:&lt;/p&gt;</description></item><item><title>[Android][筆記] Background update</title><link>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-Background-update/</link><pubDate>Thu, 02 Jun 2011 21:17:03 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-Background-update/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;今天跟人討論到關於Background update相關的問題, 這個議題一直是看似簡單(反正就是在backgroud抓資料), 但實際上很複雜也很難做的好&lt;/p&gt; &lt;p&gt;剛剛又拿了今年Google IO的&lt;a href="http://static.googleusercontent.com/external_content/untrusted_dlcp/www.google.com/en//events/io/2011/static/presofiles/android_protips_advanced_topics_for_expert_android_app_developers.pdf"&gt;Android protips這session的投影片&lt;/a&gt;複習了一下, 這個session裡剛好也有提到相關的內容, 就順便拿來借題發揮一下&lt;/p&gt;</description></item><item><title>[Android][Tip] How Twitter for Android implements auto completion in post screen?</title><link>https://blog.jln.co/AndroidTip-How-Twitter-for-Android-implements-auto-completion-in-post-screen/</link><pubDate>Sat, 14 May 2011 15:27:41 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/AndroidTip-How-Twitter-for-Android-implements-auto-completion-in-post-screen/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;Twitter for Android popup a user list when you enter &amp;ldquo;@&amp;rdquo; in post screen. Like this:&lt;/p&gt; &lt;div class="p_embed p_image_embed"&gt; &lt;a href="http://posterous.com/getfile/files.posterous.com/temp-2011-05-14/sBGyFmhynhgeFmfsfCqjzIqEuBCwzpzkbhcwhuHnroxdmiHtylrzHyCtpeJD/t1.png.scaled1000.png"&gt;&lt;img alt="T1" height="455" src="http://posterous.com/getfile/files.posterous.com/temp-2011-05-14/sBGyFmhynhgeFmfsfCqjzIqEuBCwzpzkbhcwhuHnroxdmiHtylrzHyCtpeJD/t1.png.scaled500.png" width="500"/&gt;&lt;/a&gt; &lt;/div&gt; &lt;p&gt;How it implement such feature? The solution can&amp;rsquo;t be simpler - You could use &lt;strong&gt;&lt;span style="font-size: medium;"&gt;&lt;a href="http://developer.android.com/reference/android/widget/MultiAutoCompleteTextView.html"&gt;MultiAutoCompeleteTextView&lt;/a&gt;&lt;/span&gt;&lt;/strong&gt; to do this.&lt;/p&gt; &lt;p&gt;Here is the sample codes:&lt;/p&gt; &lt;p&gt; &lt;script src="https://gist.github.com/972014.js?file=gistfile1.java"&gt;&lt;/script&gt;&lt;/p&gt; &lt;p&gt;And the result:&lt;/p&gt; &lt;div class="p_embed p_image_embed"&gt; &lt;img alt="T2" height="554" src="http://posterous.com/getfile/files.posterous.com/temp-2011-05-14/jokbfzsgrCCDIirGFyluGlsiqwbpDsasxnvvGxlbmCjfHhdInJzDvogofucm/t2.png.scaled500.png" width="475"/&gt;&lt;/div&gt; &lt;p&gt;To use this widget, you need to implement a Tokenizer to tell it where the sub text is. In this case, just find the string between &amp;rsquo;@&amp;rsquo; and space.&lt;/p&gt;</description></item><item><title>Google I/O day 1 keynote感想</title><link>https://blog.jln.co/Google-I/O-day-1-keynote%E6%84%9F%E6%83%B3/</link><pubDate>Wed, 11 May 2011 10:16:23 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Google-I/O-day-1-keynote%E6%84%9F%E6%83%B3/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;昨晚熬夜看了Google I/O的live(那是一定要的啦!), 雖然沒睡多少, 到現在依然興奮!&lt;/p&gt; &lt;p&gt;今年Day 1的Keynote搞到真的像是Android I/O一樣, Android儼然是今年必然主角一樣, 不過與我之前想像的不太一樣, 今年沒特別著重在平板, 也沒特別著重在TV和其他裝置, 而是Android本身, Android本身已經適用到手機, 平板, TV這是自然不在話下, ADK, Android@Home的加入, 等於把它延伸到更大的範圍, Movie rental, Google Music更揭示了, Google後面那朵雲可以做Android多大的後盾, 今年的主角不是Android平板呀~~~而是Android everywhere~~~&lt;/p&gt;</description></item><item><title>Generating Facebook key hash for Android</title><link>https://blog.jln.co/Generating-Facebook-key-hash-for-Android/</link><pubDate>Tue, 10 May 2011 14:19:21 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Generating-Facebook-key-hash-for-Android/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;According to&lt;a href="http://developers.facebook.com/docs/guides/mobile/#android"&gt; Facebook mobile development document&lt;/a&gt; (Android), you need to generate a key hash for your application in order to apply Facebook SSO(Single Sign on).&lt;/p&gt; &lt;p&gt;Here is the formal way to do this:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;span style="color: #99cc00;"&gt;keytool -exportcert -alias androiddebugkey -keystore ~/.android/debug.keystore | openssl sha1 -binary | openssl base64&lt;/span&gt;&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;But sometimes you won&amp;rsquo;t have a tradtional key store especially when building with Android open sources. Keys in Android open sources are in pk8 format. In order to generate key hashes with these keys, you need to tranfer them into a pk12 key store.&lt;/p&gt;</description></item><item><title>[POC][筆記][Rhino on Android] - 新的onClickListener</title><link>https://blog.jln.co/POC%E7%AD%86%E8%A8%98Rhino-on-Android-%E6%96%B0%E7%9A%84onClickListener/</link><pubDate>Mon, 09 May 2011 00:34:09 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/POC%E7%AD%86%E8%A8%98Rhino-on-Android-%E6%96%B0%E7%9A%84onClickListener/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;&lt;a href="http://julianshen.posterous.com/pocrhino-developing-android-with-js-onclickli"&gt;上次的作法&lt;/a&gt;:&lt;/p&gt; &lt;blockquote&gt; &lt;p&gt;&lt;span style="color: #800000;"&gt;var&lt;/span&gt; button1 = findview(R.id(&lt;span style="color: #3366ff;"&gt;&amp;lsquo;button1&amp;rsquo;&lt;/span&gt;));&lt;/p&gt; &lt;p&gt;button1.setOnClickListener(&lt;span style="color: #800000;"&gt;function&lt;/span&gt;(view, methodName)&lt;br/&gt;{&lt;br/&gt;     if (methodName == &lt;span style="color: #3366ff;"&gt;&amp;ldquo;onClick&amp;rdquo;&lt;/span&gt;) { &lt;br/&gt;         log(&amp;ldquo;MyScript&amp;rdquo;, &amp;ldquo;clicked&amp;rdquo;); &lt;br/&gt; } });&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;當然不是很滿意, &amp;ldquo;if(methodName == &amp;quot;onClick&amp;rdquo;)&amp;ldquo;這樣的寫法太醜了啦!&lt;/p&gt; &lt;p&gt;所以這次的目標是:&lt;/p&gt;</description></item><item><title>[POC][筆記][Rhino] Developing Android with JS - onClickListener</title><link>https://blog.jln.co/POC%E7%AD%86%E8%A8%98Rhino-Developing-Android-with-JS-onClickListener/</link><pubDate>Tue, 03 May 2011 12:35:19 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/POC%E7%AD%86%E8%A8%98Rhino-Developing-Android-with-JS-onClickListener/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;&lt;a href="http://julianshen.posterous.com/poc-using-javascript-to-develop-android-activ"&gt;上次做的&lt;/a&gt;僅止於setText這個簡單的動作, 那像是處理click這類的怎做?&lt;/p&gt; &lt;p&gt;先拿click來做範例, 在Android中, 如果要替一個view加上處理click動作要利用到View.setOnClickListener, 但setOnClickListener的參數是onClickListener, 這是一個java interface, 在Rhino中如何實作一個Java interface?&lt;/p&gt;</description></item><item><title>[POC] Using javascript to develop Android Activity</title><link>https://blog.jln.co/POC-Using-javascript-to-develop-Android-Activity/</link><pubDate>Sun, 01 May 2011 23:27:29 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/POC-Using-javascript-to-develop-Android-Activity/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;好久沒玩些好玩的了&amp;hellip;.先來點小菜&amp;hellip;.(POC = Prove of concept, 只是剛好有些想法, 所以來證明一下可不可行)&lt;/p&gt; &lt;p&gt;基本的想法是想用類似下面的javascript來寫出Android Activity(當然, 要延伸成其他的應該也沒問題)&lt;/p&gt;</description></item><item><title>Recognize your friend with Face.com</title><link>https://blog.jln.co/Recognize-your-friend-with-Face.com/</link><pubDate>Sun, 01 May 2011 21:26:35 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Recognize-your-friend-with-Face.com/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;替照片上的每個人都加上標籤(tag)是一個蠻好用的功能, 這可以方便你找到有某人的照片, 或是一群人在某時的合照, 如果善加利用是相當好用的功能, 目前主流的幾個相片服務像是Flickr, Facebook, Picasa等等, 都有這樣的功能&lt;/p&gt;</description></item><item><title>[Android] QtADB</title><link>https://blog.jln.co/Android-QtADB/</link><pubDate>Mon, 07 Mar 2011 06:25:35 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-QtADB/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;&lt;a href="http://qtadb.wordpress.com/"&gt;QtADB&lt;/a&gt; 這應該是對Android developer很實用的懶人工具吧, 把原本需要下的adb command和fastboot常用的部份包裝成GUI&lt;/p&gt; &lt;p&gt;以下是它的使用說明:&lt;/p&gt;</description></item><item><title>[Android] 沒那麼有誠意的“Android Compatibility package”</title><link>https://blog.jln.co/Android-%E6%B2%92%E9%82%A3%E9%BA%BC%E6%9C%89%E8%AA%A0%E6%84%8F%E7%9A%84Android-Compatibility-package/</link><pubDate>Sat, 05 Mar 2011 16:01:21 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E6%B2%92%E9%82%A3%E9%BA%BC%E6%9C%89%E8%AA%A0%E6%84%8F%E7%9A%84Android-Compatibility-package/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;雖然我說它&amp;quot;沒那麼有誠意&amp;quot;, 不過我也想不出有啥方法做的比它更好&lt;/p&gt; &lt;p&gt;我想, 這東西的起因在於SDK 3.0 (Honeycomb SDK)為了Duo Panel的設計引入了Fragment, 當然還有Loader和Drag and drop等其他的新東西, 新東西本身並沒啥問題, 但問題在於, 如果要把原本Android的軟體porting到Honeycomb, 勢必要把很多的Activities改寫成Fragments, 但, 這引發了一個問題, Fragement並沒有向前相容, 軟體勢必要為Honeycomb跟pre-honeycomb分兩套寫法來維護, 這的確很不經濟, 因此有Google導入Fragment造成Android API的Fragmentation&lt;/p&gt;</description></item><item><title>[Android][筆記] 3.0 SDK - Orientation change design with Duo panel UI</title><link>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-3.0-SDK-Orientation-change-design-with-Duo-panel-UI/</link><pubDate>Mon, 28 Feb 2011 16:27:05 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-3.0-SDK-Orientation-change-design-with-Duo-panel-UI/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;關於這主題, Dianne Hackborn已經&lt;a href="http://android-developers.blogspot.com/2011/02/android-30-fragments-api.html"&gt;在這&lt;/a&gt;講的很詳細了, 這邊挑了一些要點&lt;/p&gt; &lt;p&gt;Duo panel的設計在iPad上已經是蠻常見的了, 這設計的一個特點是, 在Landscape模式時為了充分利用空間, 把Panel切割成兩部分, 但使用者轉換成Portrait時, 則會轉換成Single panel&lt;/p&gt;</description></item><item><title>[Android][筆記] SDK 3.0 - 初探Fragment</title><link>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-SDK-3.0-%E5%88%9D%E6%8E%A2Fragment/</link><pubDate>Sun, 27 Feb 2011 18:42:45 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-SDK-3.0-%E5%88%9D%E6%8E%A2Fragment/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;詳細的Fragment初階可以參考&lt;a href="http://developer.android.com/guide/topics/fundamentals/fragments.html"&gt; Developer Document&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Developer document裡面的Design Philosophy提到, Fragement的設計是為了讓大尺寸的螢幕(比如說Tablet), 有更動態更彈性的UI設計, 從那個範例圖來簡單的說, 就是想達到iPad上那種Multi-panel的UI設計&lt;/p&gt;</description></item><item><title>[Android] 屬於Android developer的Chrome extension</title><link>https://blog.jln.co/Android-%E5%B1%AC%E6%96%BCAndroid-developer%E7%9A%84Chrome-extension/</link><pubDate>Sun, 27 Feb 2011 03:34:44 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E5%B1%AC%E6%96%BCAndroid-developer%E7%9A%84Chrome-extension/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;剛把整個電腦重灌, 所以趁這機會加強一下自己的Chrome browser, 找了幾個extension, 還不錯, 推薦一下:&lt;/p&gt; &lt;p&gt;以下兩個是對Android developer應該蠻實用的:&lt;/p&gt;</description></item><item><title>[Android][筆記] HoneyComb - RemoteViewsService</title><link>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-HoneyComb-RemoteViewsService/</link><pubDate>Wed, 23 Feb 2011 17:11:52 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-HoneyComb-RemoteViewsService/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;在HoneyComb之前Android widget是不support list view, grid view (泛稱Adapter view), 但HoneyComb引入了&lt;/p&gt; &lt;p&gt;不出所料, 還是只是延伸了RemoteViews, 剛在SDK level &amp;ldquo;11&amp;quot;看到這個&lt;a href="http://developer.android.com/reference/android/widget/RemoteViewsService.html"&gt;RemoteViewsServices&lt;/a&gt;, 在onGetViewFactory要回傳&lt;span style="border-collapse: collapse; color: #333333; font-family: arial, sans-serif; font-size: 12px;"&gt;&lt;a href="http://developer.android.com/reference/android/widget/RemoteViewsService.RemoteViewsFactory.html" style="color: #006699; text-decoration: underline;"&gt;RemoteViewsService.RemoteViewsFactory&lt;/a&gt;, 基本上這Class就跟Adapter, 差不多, 只是更簡化&lt;/span&gt;&lt;/p&gt;</description></item><item><title>[Android] 不透過Intent receiver及定義自己的AIDL做IPC的方法</title><link>https://blog.jln.co/Android-%E4%B8%8D%E9%80%8F%E9%81%8EIntent-receiver%E5%8F%8A%E5%AE%9A%E7%BE%A9%E8%87%AA%E5%B7%B1%E7%9A%84AIDL%E5%81%9AIPC%E7%9A%84%E6%96%B9%E6%B3%95/</link><pubDate>Wed, 23 Feb 2011 00:12:02 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E4%B8%8D%E9%80%8F%E9%81%8EIntent-receiver%E5%8F%8A%E5%AE%9A%E7%BE%A9%E8%87%AA%E5%B7%B1%E7%9A%84AIDL%E5%81%9AIPC%E7%9A%84%E6%96%B9%E6%B3%95/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;在Android裡, 做IPC(Inter process call)的方法有很多種, 可以寫一個Intent receiver接收來自於另一個process的Intent, 也可以自己用AIDL定義interface來做&lt;/p&gt;</description></item><item><title>[Android][筆記] Remote debugging</title><link>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-Remote-debugging/</link><pubDate>Tue, 22 Feb 2011 01:37:45 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-Remote-debugging/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;本來這技巧應該沒啥用上, 不過最近一台開發的機器, usb一直不通不通的, adb logcat自然就不能用了, 不過好在現在adb有支援adb over tcpip&lt;/p&gt; &lt;p&gt;啟用的方法是&lt;/p&gt; &lt;blockquote class="posterous_short_quote"&gt; &lt;p&gt;adb tcpip port&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;這就會把手機上的adb轉成可以透過tcpip連接&lt;/p&gt;</description></item><item><title>[Android] DeCompiler APK/DEX in 2 steps</title><link>https://blog.jln.co/Android-DeCompiler-APK/DEX-in-2-steps/</link><pubDate>Sun, 13 Feb 2011 01:20:48 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-DeCompiler-APK/DEX-in-2-steps/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;真的, 這真的很簡單, 只要兩個步驟&lt;/p&gt; &lt;p&gt;首先, 你要有兩個工具:&lt;/p&gt; &lt;ul&gt;&lt;li&gt;&lt;a href="http://code.google.com/p/dex2jar/"&gt;dex2jar&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://java.decompiler.free.fr/"&gt;JD-GU&lt;/a&gt;I 或其他Java decompliler (這邊我用JD-GUI當範例)&lt;/li&gt; &lt;/ul&gt;&lt;p&gt;步驟1: 拿dex2jar把apk或是dex轉成jar (裡面包含從dex轉譯過來的class file)&lt;/p&gt;</description></item><item><title>[Android] Honeycomb preview emulator PREVIEW</title><link>https://blog.jln.co/Android-Honeycomb-preview-emulator-PREVIEW/</link><pubDate>Thu, 27 Jan 2011 23:40:44 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-Honeycomb-preview-emulator-PREVIEW/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;今天早上, Honeycomb preview SDK已經出來了, 當然包含了模擬器, 不過真的是慢到嚇死人的不能用, 在我的MBP上動不了&lt;/p&gt; &lt;p&gt;剛剛注意到, 預設的Ram size只有256MB(小氣!!!), 所以就把它調大來試看看, 果然勉強可以動一下下 (我MBP只有2G RAM, 所以我設768MB給它用):&lt;/p&gt;</description></item><item><title>[Android][筆記] 在進入Activity時不default開啟軟體鍵盤(SIP)</title><link>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-%E5%9C%A8%E9%80%B2%E5%85%A5Activity%E6%99%82%E4%B8%8Ddefault%E9%96%8B%E5%95%9F%E8%BB%9F%E9%AB%94%E9%8D%B5%E7%9B%A4SIP/</link><pubDate>Thu, 27 Jan 2011 20:29:45 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-%E5%9C%A8%E9%80%B2%E5%85%A5Activity%E6%99%82%E4%B8%8Ddefault%E9%96%8B%E5%95%9F%E8%BB%9F%E9%AB%94%E9%8D%B5%E7%9B%A4SIP/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;Android上有個很煩人的就是(尤其是某公司的手機), 如果畫面上有可以輸入的框, 預設會focus在那上面, 某些手機(或說某些公司的手機), 預設變成只要那邊取得focus, 就會跳出軟體鍵盤, 這對很多User來說, 會有點煩(要看場合啦)&amp;hellip;..&lt;/p&gt;</description></item><item><title>[Android] 調整UI layout的利器- hierarchyviewer</title><link>https://blog.jln.co/Android-%E8%AA%BF%E6%95%B4UI-layout%E7%9A%84%E5%88%A9%E5%99%A8-hierarchyviewer/</link><pubDate>Thu, 27 Jan 2011 19:59:21 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-%E8%AA%BF%E6%95%B4UI-layout%E7%9A%84%E5%88%A9%E5%99%A8-hierarchyviewer/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;&lt;a href="http://posterous.com/getfile/files.posterous.com/temp-2011-01-27/GwChqdthbkrCGvCmIFpvHgjAgAdoqdxeyEnjihyJipwJrgpCGpwrdgkmqiEH/_2011-01-27_6.45.46.png.scaled1000.png"&gt;&lt;img src="http://posterous.com/getfile/files.posterous.com/temp-2011-01-27/GwChqdthbkrCGvCmIFpvHgjAgAdoqdxeyEnjihyJipwJrgpCGpwrdgkmqiEH/_2011-01-27_6.45.46.png.scaled500.png" width="500" height="446"/&gt;&lt;/a&gt; Visual UI design的工具在很多平台跟語言其實都有, 當然有好有壞啦, Android ADT也是有的, 所以並不稀奇, 不過Android有的是更好用的 - hierarchyviewer&lt;/p&gt; &lt;p&gt;一般WYSIWYG UI editor著重的是在開發時期拉UI layout的部份, 但更進階的通常就沒著墨了, ADT上的UI builder並不是很強, 真正要能夠調出複雜而且是自己想要的UI光靠那個也並不容易, 還是得對一堆layout有相當程度的了解才能比較得心應手, hierarchyviewer是屬於更進一步的工具, 他可以檢查做出來的成品的UI layout (當然也可以想辦法偷人家的看 :P), 由於Android上的layout設計是階層式的, 所以可以攤成樹狀, 由hierarchyviewer就可以很明顯看出各layout從屬關係, 並且可以從screen shot部分的對應看出某一段layout成果的長像是如何&lt;/p&gt;</description></item><item><title>[Android] Google Analytics for Android</title><link>https://blog.jln.co/Android-Google-Analytics-for-Android/</link><pubDate>Tue, 18 Jan 2011 02:43:37 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-Google-Analytics-for-Android/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;今天晚上的GTUG請來了Tony Chan講GB的新features, 不過, 這些內容其實大部分都已經在Android網站上看過很多次了, 提起不了啥興趣, 雖然是對StorageManager有點興趣, 但卻不在這次講的內容, 可見這東西真的並不是個完成品, 不足以拿出來推&lt;/p&gt;</description></item><item><title>[Android] Gingerbread: StorageManager and Obb</title><link>https://blog.jln.co/Android-Gingerbread-StorageManager-and-Obb/</link><pubDate>Sat, 15 Jan 2011 19:04:26 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-Gingerbread-StorageManager-and-Obb/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;在Android Gingerbread引入了&lt;a href="http://developer.android.com/reference/android/os/storage/StorageManager.html"&gt;StorageManager&lt;/a&gt;這東西, 似乎是為了OBB(Opaque Binary Blobs)這功能而來的, 不過, 似乎是也還沒把tool含到SDK內, 也沒很詳細的說明文件, 所以看起來現在好像也沒啥人去用這個, 實際上試了一下, 最後還是有問題, 搞不好還有bug, 懶得繼續追下去了, 不過大致上理解怎來利用這東西&lt;/p&gt;</description></item><item><title>[Android][Dev tip] 在手機畫面上加上一個浮水印</title><link>https://blog.jln.co/AndroidDev-tip-%E5%9C%A8%E6%89%8B%E6%A9%9F%E7%95%AB%E9%9D%A2%E4%B8%8A%E5%8A%A0%E4%B8%8A%E4%B8%80%E5%80%8B%E6%B5%AE%E6%B0%B4%E5%8D%B0/</link><pubDate>Fri, 07 Jan 2011 20:32:45 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/AndroidDev-tip-%E5%9C%A8%E6%89%8B%E6%A9%9F%E7%95%AB%E9%9D%A2%E4%B8%8A%E5%8A%A0%E4%B8%8A%E4%B8%80%E5%80%8B%E6%B5%AE%E6%B0%B4%E5%8D%B0/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;其實這是一個沒啥用的技巧（至少我還想不出應用）, 就是加上一個像是浮水印的東西在畫面上, 不管在哪都會出現的, 像是這樣:&lt;/p&gt; &lt;p&gt;&lt;img src="http://posterous.com/getfile/files.posterous.com/temp-2011-01-07/xncheEwklHDpaebkmswmhzddFAirDfiIyIeJpeCzADvttFwlcunfcetqEJzr/ova1.png.scaled500.png" width="480" height="800"/&gt;&lt;img src="http://posterous.com/getfile/files.posterous.com/temp-2011-01-07/FgtouerECIfvBFrGeorctwbJDykaDEqFDDqxamtvcmthjgdzxAkECstjaofg/ova2.png.scaled500.png" width="480" height="800"/&gt; 因為這個image要讓他一直不會消失, 所以他並不會是一個Activity, 因為Activity會有他的生命週期, 離開後就沒了, 所以要透過WindowManager去加上這個ImageView, 而且加上View的動作必須要給Background service去處理(這樣也就可以去做一些變化, 或動畫之類的)&lt;/p&gt;</description></item><item><title>[Android] Screen capture for Android</title><link>https://blog.jln.co/Android-Screen-capture-for-Android/</link><pubDate>Wed, 29 Dec 2010 23:03:34 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-Screen-capture-for-Android/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;雖然Android可以透過ddms抓screen shot, 不過這樣畢竟沒iOS方便, iOS只要按個熱鍵就可以抓了, 不用接著電腦&lt;/p&gt; &lt;p&gt;要在Android上實現這功能其實也不難(不過,應該只能跑在rooted device吧?本文介紹的是直接跟AOSP一起build用platform certificate)&lt;/p&gt;</description></item><item><title>[Android] Building Gingerbread for Nexus One</title><link>https://blog.jln.co/Android-Building-Gingerbread-for-Nexus-One/</link><pubDate>Mon, 27 Dec 2010 22:40:07 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-Building-Gingerbread-for-Nexus-One/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;抓到Gingerbread之後本來要build一份給Nexus one的, 後來Build break後就懶得管它, 昨天稍微研究一下解法, 果然跟我想的差不多&lt;/p&gt; &lt;p&gt;Builde break的點在於libcameraservice, 主要是某H公司的camera driver並沒open source, 要build必須先從Nexus One取出binary來build, 但偏偏Gingerbread的libcameraservice跟camera driver的interface有變, 像是HAL_getNumberOfCameras, HAL_getCameraInfo在舊版的driver並不存在&lt;/p&gt;</description></item><item><title>[Android] Getting package signature in runtime</title><link>https://blog.jln.co/Android-Getting-package-signature-in-runtime/</link><pubDate>Fri, 24 Dec 2010 23:42:22 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-Getting-package-signature-in-runtime/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;如果使用過Google MapView你會發現G社會叫你用你的package signature去申請map key(&lt;a href="http://code.google.com/intl/zh-TW/android/add-ons/google-apis/mapkey.html"&gt;參考這邊&lt;/a&gt;)&lt;/p&gt; &lt;p&gt;那MapView本身又是如何取得你的package signature的呢? &lt;/p&gt;</description></item><item><title>[Android][筆記] Single Sign on with Facebook SDK</title><link>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-Single-Sign-on-with-Facebook-SDK/</link><pubDate>Fri, 24 Dec 2010 18:32:04 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android%E7%AD%86%E8%A8%98-Single-Sign-on-with-Facebook-SDK/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;透過Facebook Android SDK去sign in Facebook其實很單純, 只需要這樣幾行code:&lt;/p&gt; &lt;blockquote&gt; &lt;p class="p1"&gt;&lt;span class="s1"&gt;if&lt;/span&gt; (!&lt;span class="s2"&gt;facebook&lt;/span&gt;.isSessionValid()) {&lt;/p&gt; &lt;p class="p1"&gt;&lt;span class="s2"&gt;&lt;span style="color: #000000;"&gt;    &lt;/span&gt;facebook&lt;/span&gt;.authorize(&lt;span class="s1"&gt;this&lt;/span&gt;, &lt;span class="s1"&gt;new&lt;/span&gt; String[] { &lt;span class="s3"&gt;&amp;ldquo;publish_stream&amp;rdquo;&lt;/span&gt; }, &lt;span class="s1"&gt;new&lt;/span&gt; AuthDialogListener());&lt;/p&gt; &lt;p class="p1"&gt;}&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;其中AuthDialogListener是繼承自Facebook.DialogListener, 因為Authentication dialog是由Facebook SDK處理的, 應用程式只要負責處理onComplete, onError等等callback&lt;/p&gt;</description></item><item><title>[Android] Access remote data on another process using ContentProvider and Cursor</title><link>https://blog.jln.co/Android-Access-remote-data-on-another-process-using-ContentProvider-and-Cursor/</link><pubDate>Tue, 07 Dec 2010 22:52:27 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Android-Access-remote-data-on-another-process-using-ContentProvider-and-Cursor/</guid><description>&lt;div class="posterous_autopost"&gt;&lt;p&gt;這篇要示範的是, 如何寫一個ContentProvider讓其他的應用程式透過這個Provider去存取網路上的資料&lt;/p&gt; &lt;p&gt;這不是正統用法, 不過的確可以這樣用, 那為啥要這樣呢? 只是好玩, 還沒想到特別的應用&lt;/p&gt;</description></item></channel></rss>