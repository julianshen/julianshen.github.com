<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Http on Le murmure de Julian</title><link>https://blog.jln.co/tags/Http/</link><description>Recent content in Http on Le murmure de Julian</description><generator>Hugo</generator><language>zh-tw</language><managingEditor>julianshen22@gmail.com (Julian Shen)</managingEditor><webMaster>julianshen22@gmail.com (Julian Shen)</webMaster><lastBuildDate>Wed, 08 Mar 2017 21:42:36 +0000</lastBuildDate><atom:link href="https://blog.jln.co/tags/Http/feed.xml" rel="self" type="application/rss+xml"/><item><title>[Java] 用MockWebServer測試REST client</title><link>https://blog.jln.co/Java-%E7%94%A8MockWebServer%E6%B8%AC%E8%A9%A6REST-client/</link><pubDate>Wed, 08 Mar 2017 21:42:36 +0000</pubDate><author>julianshen22@gmail.com (Julian Shen)</author><guid>https://blog.jln.co/Java-%E7%94%A8MockWebServer%E6%B8%AC%E8%A9%A6REST-client/</guid><description>&lt;p&gt;應該來規定自己一週至少要寫一篇文章的, 這禮拜剛回歸工作的生活, 回歸了Java, 先從今天算起, 看多久能寫個一篇&lt;/p&gt;
&lt;p&gt;這次來寫寫怎麼測試REST client, 測試最直覺的當然是讓Client直接連到Server, 但這樣變數比較多, 比如說網路斷了呀, Server掛掉了呀, 測試資料也不穩定(資料庫內的資料並不一定是固定的), 不太利於自動化測試, 如果只是要測試Client邏輯, 自然擺脫這些因素比較好, 餵假資料(設計好的資料)是比較好的選擇&lt;/p&gt;</description></item></channel></rss>